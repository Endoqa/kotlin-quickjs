// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.quickjs

import java.lang.foreign.*
import java.lang.invoke.VarHandle

@JvmInline
public value class JSRefCountHeader(
    public val `$mem`: MemorySegment,
) {
    public var ref_count: Int
        get() = ref_countHandle.get(this.`$mem`, 0L) as Int
        set(`value`) {
            ref_countHandle.set(this.`$mem`, 0L, value)
        }

    public constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(layout)
    })

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            ValueLayout.JAVA_INT.withName("ref_count"),
        ).withName("JSRefCountHeader")

        @JvmField
        public val ref_countHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("ref_count"))

        @JvmStatic
        public fun allocate(alloc: SegmentAllocator): JSRefCountHeader =
            JSRefCountHeader(alloc.allocate(layout))
    }
}
