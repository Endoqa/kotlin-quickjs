// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.quickjs

import java.lang.foreign.*
import java.lang.invoke.VarHandle

@JvmInline
public value class JSCFunctionListPropListEntry(
    public val `$mem`: MemorySegment,
) {
    public var tab: Pointer<JSCFunctionListEntry>
        get() = tabHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            tabHandle.set(this.`$mem`, 0L, value)
        }

    public var len: Int
        get() = lenHandle.get(this.`$mem`, 0L) as Int
        set(`value`) {
            lenHandle.set(this.`$mem`, 0L, value)
        }

    public constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(layout)
    })

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            `$RuntimeHelper`.POINTER.withName("tab"),
            ValueLayout.JAVA_INT.withName("len"),
            MemoryLayout.paddingLayout(4),
        ).withName("JSCFunctionListPropListEntry")

        @JvmField
        public val tabHandle: VarHandle = layout.varHandle(MemoryLayout.PathElement.groupElement("tab"))

        @JvmField
        public val lenHandle: VarHandle = layout.varHandle(MemoryLayout.PathElement.groupElement("len"))

        @JvmStatic
        public fun allocate(alloc: SegmentAllocator): JSCFunctionListPropListEntry =
            JSCFunctionListPropListEntry(alloc.allocate(layout))
    }
}
