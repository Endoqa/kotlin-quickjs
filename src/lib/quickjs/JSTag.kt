// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.quickjs

import java.lang.invoke.MethodHandle
import java.lang.invoke.MethodHandles
import java.lang.invoke.MethodType
import kotlin.Int

public enum class JSTag(
    public val `value`: Int,
) {
    TAGFIRST(-11),
    TAGBIGDECIMAL(-11),
    TAGBIGINT(-10),
    TAGBIGFLOAT(-9),
    TAGSYMBOL(-8),
    TAGSTRING(-7),
    TAGMODULE(-3),
    TAGFUNCTIONBYTECODE(-2),
    TAGOBJECT(-1),
    TAGINT(0),
    TAGBOOL(1),
    TAGNULL(2),
    TAGUNDEFINED(3),
    TAGUNINITIALIZED(4),
    TAGCATCHOFFSET(5),
    TAGEXCEPTION(6),
    TAGFLOAT64(7),
    ;

    public companion object {
        @JvmStatic
        public val fromInt: MethodHandle = MethodHandles.lookup().findStatic(
            JSTag::class.java,
            "fromInt",
            MethodType.methodType(JSTag::class.java, Int::class.java)
        )

        @JvmStatic
        public val toInt: MethodHandle = MethodHandles.lookup().findGetter(
            JSTag::class.java,
            "value",
            Int::class.java
        )

        @JvmStatic
        public fun fromInt(`value`: Int): JSTag = when (value) {
            TAGFIRST.value -> TAGFIRST
            TAGBIGDECIMAL.value -> TAGBIGDECIMAL
            TAGBIGINT.value -> TAGBIGINT
            TAGBIGFLOAT.value -> TAGBIGFLOAT
            TAGSYMBOL.value -> TAGSYMBOL
            TAGSTRING.value -> TAGSTRING
            TAGMODULE.value -> TAGMODULE
            TAGFUNCTIONBYTECODE.value -> TAGFUNCTIONBYTECODE
            TAGOBJECT.value -> TAGOBJECT
            TAGINT.value -> TAGINT
            TAGBOOL.value -> TAGBOOL
            TAGNULL.value -> TAGNULL
            TAGUNDEFINED.value -> TAGUNDEFINED
            TAGUNINITIALIZED.value -> TAGUNINITIALIZED
            TAGCATCHOFFSET.value -> TAGCATCHOFFSET
            TAGEXCEPTION.value -> TAGEXCEPTION
            TAGFLOAT64.value -> TAGFLOAT64
            else -> error("enum not found")
        }
    }
}
