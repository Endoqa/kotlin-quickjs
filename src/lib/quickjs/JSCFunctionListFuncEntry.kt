// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.quickjs

import java.lang.foreign.*
import java.lang.invoke.VarHandle

@JvmInline
public value class JSCFunctionListFuncEntry(
    public val `$mem`: MemorySegment,
) {
    public var length: uint8_t
        get() = (lengthHandle.get(this.`$mem`, 0L) as Byte).toUByte()
        set(`value`) {
            lengthHandle.set(this.`$mem`, 0L, value.toByte())
        }

    public var cproto: uint8_t
        get() = (cprotoHandle.get(this.`$mem`, 0L) as Byte).toUByte()
        set(`value`) {
            cprotoHandle.set(this.`$mem`, 0L, value.toByte())
        }

    public var cfunc: JSCFunctionType
        get() = JSCFunctionType(
            cfuncHandle.invokeExact(this.`$mem`, 0L) as
                    MemorySegment
        )
        set(`value`) {
            MemorySegment.copy(value.`$mem`, 0L, this.cfunc.`$mem`, 0L, JSCFunctionType.layout.byteSize())
        }

    public constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(layout)
    })

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            ValueLayout.JAVA_BYTE.withName("length"),
            ValueLayout.JAVA_BYTE.withName("cproto"),
            MemoryLayout.paddingLayout(6),
            JSCFunctionType.layout.withName("cfunc"),
        ).withName("JSCFunctionListFuncEntry")

        @JvmField
        public val lengthHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("length"))

        @JvmField
        public val cprotoHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("cproto"))

        @JvmField
        public val cfuncHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("cfunc"))

        @JvmStatic
        public fun allocate(alloc: SegmentAllocator): JSCFunctionListFuncEntry =
            JSCFunctionListFuncEntry(alloc.allocate(layout))
    }
}
