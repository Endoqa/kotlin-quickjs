// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.quickjs

import java.lang.foreign.FunctionDescriptor
import java.lang.foreign.Linker
import java.lang.foreign.ValueLayout
import java.lang.invoke.MethodHandle

internal val `JS_VALUE_GET_FLOAT64$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_VALUE_GET_FLOAT64"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_DOUBLE,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_VALUE_GET_NORM_TAG$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_VALUE_GET_NORM_TAG"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_VALUE_IS_NAN$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_VALUE_IS_NAN"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JSCFunction$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JSCFunction"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JSCFunctionMagic$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JSCFunctionMagic"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
    )
)

internal val `JSCFunctionData$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JSCFunctionData"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_NewRuntime$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewRuntime"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_SetRuntimeInfo$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_SetRuntimeInfo"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_SetMemoryLimit$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_SetMemoryLimit"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_SetGCThreshold$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_SetGCThreshold"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_SetMaxStackSize$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_SetMaxStackSize"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_UpdateStackTop$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_UpdateStackTop"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_NewRuntime2$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewRuntime2"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_FreeRuntime$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_FreeRuntime"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_GetRuntimeOpaque$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_GetRuntimeOpaque"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_SetRuntimeOpaque$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_SetRuntimeOpaque"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_MarkFunc$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_MarkFunc"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_MarkValue$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_MarkValue"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_RunGC$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_RunGC"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_IsLiveObject$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_IsLiveObject"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_NewContext$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewContext"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_FreeContext$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_FreeContext"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_DupContext$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_DupContext"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_GetContextOpaque$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_GetContextOpaque"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_SetContextOpaque$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_SetContextOpaque"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_GetRuntime$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_GetRuntime"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_SetClassProto$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_SetClassProto"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_GetClassProto$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_GetClassProto"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_NewContextRaw$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewContextRaw"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_AddIntrinsicBaseObjects$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_AddIntrinsicBaseObjects"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_AddIntrinsicDate$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_AddIntrinsicDate"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_AddIntrinsicEval$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_AddIntrinsicEval"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_AddIntrinsicStringNormalize$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("JS_AddIntrinsicStringNormalize"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `JS_AddIntrinsicRegExpCompiler$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("JS_AddIntrinsicRegExpCompiler"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `JS_AddIntrinsicRegExp$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_AddIntrinsicRegExp"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_AddIntrinsicJSON$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_AddIntrinsicJSON"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_AddIntrinsicProxy$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_AddIntrinsicProxy"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_AddIntrinsicMapSet$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_AddIntrinsicMapSet"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_AddIntrinsicTypedArrays$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_AddIntrinsicTypedArrays"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_AddIntrinsicPromise$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_AddIntrinsicPromise"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_AddIntrinsicBigInt$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_AddIntrinsicBigInt"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_AddIntrinsicBigFloat$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_AddIntrinsicBigFloat"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_AddIntrinsicBigDecimal$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_AddIntrinsicBigDecimal"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_AddIntrinsicOperators$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_AddIntrinsicOperators"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_EnableBignumExt$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_EnableBignumExt"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
    )
)

internal val `js_string_codePointRange$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("js_string_codePointRange"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `js_malloc_rt$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("js_malloc_rt"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `js_free_rt$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("js_free_rt"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `js_realloc_rt$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("js_realloc_rt"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `js_malloc_usable_size_rt$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("js_malloc_usable_size_rt"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `js_mallocz_rt$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("js_mallocz_rt"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `js_malloc$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("js_malloc"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `js_free$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("js_free"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `js_realloc$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("js_realloc"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `js_malloc_usable_size$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("js_malloc_usable_size"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `js_realloc2$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("js_realloc2"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `js_mallocz$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("js_mallocz"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `js_strdup$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("js_strdup"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `js_strndup$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("js_strndup"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_ComputeMemoryUsage$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_ComputeMemoryUsage"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_DumpMemoryUsage$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_DumpMemoryUsage"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_NewAtomLen$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewAtomLen"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_NewAtom$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewAtom"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_NewAtomUInt32$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewAtomUInt32"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_DupAtom$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_DupAtom"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_FreeAtom$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_FreeAtom"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_FreeAtomRT$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_FreeAtomRT"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_AtomToValue$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_AtomToValue"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_AtomToString$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_AtomToString"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_AtomToCString$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_AtomToCString"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_ValueToAtom$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_ValueToAtom"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JSClassFinalizer$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JSClassFinalizer"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JSClassGCMark$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JSClassGCMark"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JSClassCall$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JSClassCall"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_NewClassID$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewClassID"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_NewClass$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewClass"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_IsRegisteredClass$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_IsRegisteredClass"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_NewBool$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewBool"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_NewInt32$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewInt32"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_NewCatchOffset$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewCatchOffset"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_NewInt64$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewInt64"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_NewUint32$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewUint32"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_NewBigInt64$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewBigInt64"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_NewBigUint64$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewBigUint64"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_NewFloat64$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewFloat64"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_DOUBLE,
    )
)

internal val `JS_IsNumber$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_IsNumber"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_IsBigInt$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_IsBigInt"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_IsBigFloat$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_IsBigFloat"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_IsBigDecimal$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_IsBigDecimal"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_IsBool$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_IsBool"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_IsNull$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_IsNull"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_IsUndefined$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_IsUndefined"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_IsException$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_IsException"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_IsUninitialized$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_IsUninitialized"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_IsString$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_IsString"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_IsSymbol$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_IsSymbol"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_IsObject$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_IsObject"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_Throw$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_Throw"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_GetException$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_GetException"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_IsError$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_IsError"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_ResetUncatchableError$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_ResetUncatchableError"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_NewError$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewError"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_ThrowSyntaxError$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_ThrowSyntaxError"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_ThrowTypeError$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_ThrowTypeError"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_ThrowReferenceError$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_ThrowReferenceError"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_ThrowRangeError$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_ThrowRangeError"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_ThrowInternalError$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_ThrowInternalError"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_ThrowOutOfMemory$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_ThrowOutOfMemory"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_FreeValue$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_FreeValue"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_FreeValueRT$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_FreeValueRT"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_DupValue$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_DupValue"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_DupValueRT$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_DupValueRT"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_ToBool$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_ToBool"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_ToInt32$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_ToInt32"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_ToUint32$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_ToUint32"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_ToInt64$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_ToInt64"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_ToIndex$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_ToIndex"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_ToFloat64$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_ToFloat64"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_ToBigInt64$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_ToBigInt64"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_ToInt64Ext$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_ToInt64Ext"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_NewStringLen$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewStringLen"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_NewString$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewString"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_NewAtomString$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewAtomString"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_ToString$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_ToString"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_ToPropertyKey$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_ToPropertyKey"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_ToCStringLen2$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_ToCStringLen2"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_ToCStringLen$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_ToCStringLen"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_ToCString$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_ToCString"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_FreeCString$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_FreeCString"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_NewObjectProtoClass$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewObjectProtoClass"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_NewObjectClass$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewObjectClass"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_NewObjectProto$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewObjectProto"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_NewObject$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewObject"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_IsFunction$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_IsFunction"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_IsConstructor$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_IsConstructor"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_SetConstructorBit$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_SetConstructorBit"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_NewArray$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewArray"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_IsArray$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_IsArray"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_GetPropertyInternal$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_GetPropertyInternal"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_GetProperty$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_GetProperty"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_GetPropertyStr$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_GetPropertyStr"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_GetPropertyUint32$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_GetPropertyUint32"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_SetPropertyInternal$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_SetPropertyInternal"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_SetProperty$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_SetProperty"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_SetPropertyUint32$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_SetPropertyUint32"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_SetPropertyInt64$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_SetPropertyInt64"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_SetPropertyStr$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_SetPropertyStr"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_HasProperty$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_HasProperty"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_IsExtensible$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_IsExtensible"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_PreventExtensions$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_PreventExtensions"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_DeleteProperty$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_DeleteProperty"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_SetPrototype$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_SetPrototype"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_GetPrototype$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_GetPrototype"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_GetOwnPropertyNames$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_GetOwnPropertyNames"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_GetOwnProperty$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_GetOwnProperty"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_Call$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_Call"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_Invoke$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_Invoke"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_CallConstructor$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_CallConstructor"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_CallConstructor2$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_CallConstructor2"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_DetectModule$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_DetectModule"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_Eval$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_Eval"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_EvalThis$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_EvalThis"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_GetGlobalObject$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_GetGlobalObject"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_IsInstanceOf$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_IsInstanceOf"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_DefineProperty$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_DefineProperty"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_DefinePropertyValue$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_DefinePropertyValue"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_DefinePropertyValueUint32$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_DefinePropertyValueUint32"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_DefinePropertyValueStr$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_DefinePropertyValueStr"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_DefinePropertyGetSet$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_DefinePropertyGetSet"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_SetOpaque$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_SetOpaque"),
    FunctionDescriptor.ofVoid(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_GetOpaque$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_GetOpaque"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_GetOpaque2$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_GetOpaque2"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_ParseJSON$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_ParseJSON"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_ParseJSON2$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_ParseJSON2"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_JSONStringify$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_JSONStringify"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JSFreeArrayBufferDataFunc$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JSFreeArrayBufferDataFunc"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_NewArrayBuffer$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewArrayBuffer"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_NewArrayBufferCopy$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewArrayBufferCopy"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_DetachArrayBuffer$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_DetachArrayBuffer"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_GetArrayBuffer$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_GetArrayBuffer"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_GetTypedArrayBuffer$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_GetTypedArrayBuffer"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_SetSharedArrayBufferFunctions$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("JS_SetSharedArrayBufferFunctions"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `JS_NewPromiseCapability$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewPromiseCapability"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_PromiseState$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_PromiseState"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_PromiseResult$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_PromiseResult"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JSHostPromiseRejectionTracker$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("JSHostPromiseRejectionTracker"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            ValueLayout.JAVA_LONG,
            ValueLayout.JAVA_LONG,
            ValueLayout.JAVA_INT,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `JS_SetHostPromiseRejectionTracker$mh`: MethodHandle =
    Linker.nativeLinker().downcallHandle(
        `$RuntimeHelper`.findSymbol("JS_SetHostPromiseRejectionTracker"),
        FunctionDescriptor.ofVoid(
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
            `$RuntimeHelper`.POINTER,
        )
    )

internal val `JSInterruptHandler$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JSInterruptHandler"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_SetInterruptHandler$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_SetInterruptHandler"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_SetCanBlock$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_SetCanBlock"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_SetIsHTMLDDA$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_SetIsHTMLDDA"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JSModuleNormalizeFunc$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JSModuleNormalizeFunc"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JSModuleLoaderFunc$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JSModuleLoaderFunc"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_SetModuleLoaderFunc$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_SetModuleLoaderFunc"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_GetImportMeta$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_GetImportMeta"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_GetModuleName$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_GetModuleName"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JSJobFunc$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JSJobFunc"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_EnqueueJob$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_EnqueueJob"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_IsJobPending$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_IsJobPending"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_ExecutePendingJob$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_ExecutePendingJob"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_WriteObject$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_WriteObject"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_WriteObject2$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_WriteObject2"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_ReadObject$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_ReadObject"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_EvalFunction$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_EvalFunction"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_ResolveModule$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_ResolveModule"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_GetScriptOrModuleName$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_GetScriptOrModuleName"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_LoadModule$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_LoadModule"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_NewCFunction2$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewCFunction2"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_NewCFunctionData$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewCFunctionData"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_NewCFunction$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewCFunction"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_NewCFunctionMagic$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewCFunctionMagic"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_INT,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_SetConstructor$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_SetConstructor"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_SetPropertyFunctionList$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_SetPropertyFunctionList"),
    FunctionDescriptor.ofVoid(
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
    )
)

internal val `JSModuleInitFunc$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JSModuleInitFunc"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_NewCModule$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_NewCModule"),
    FunctionDescriptor.of(
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_AddModuleExport$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_AddModuleExport"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
    )
)

internal val `JS_AddModuleExportList$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_AddModuleExportList"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
    )
)

internal val `JS_SetModuleExport$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_SetModuleExport"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_LONG,
    )
)

internal val `JS_SetModuleExportList$mh`: MethodHandle = Linker.nativeLinker().downcallHandle(
    `$RuntimeHelper`.findSymbol("JS_SetModuleExportList"),
    FunctionDescriptor.of(
        ValueLayout.JAVA_INT,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        `$RuntimeHelper`.POINTER,
        ValueLayout.JAVA_INT,
    )
)
