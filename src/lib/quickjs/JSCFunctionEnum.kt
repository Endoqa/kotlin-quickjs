// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.quickjs

import java.lang.invoke.MethodHandle
import java.lang.invoke.MethodHandles
import java.lang.invoke.MethodType
import kotlin.Int

public enum class JSCFunctionEnum(
    public val `value`: Int,
) {
    CFUNCgeneric(0),
    CFUNCgenericmagic(1),
    CFUNCconstructor(2),
    CFUNCconstructormagic(3),
    CFUNCconstructororfunc(4),
    CFUNCconstructororfuncmagic(5),
    CFUNCff(6),
    CFUNCfff(7),
    CFUNCgetter(8),
    CFUNCsetter(9),
    CFUNCgettermagic(10),
    CFUNCsettermagic(11),
    CFUNCiteratornext(12),
    ;

    public companion object {
        @JvmStatic
        public val fromInt: MethodHandle = MethodHandles.lookup().findStatic(
            JSCFunctionEnum::class.java,
            "fromInt",
            MethodType.methodType(JSCFunctionEnum::class.java, Int::class.java)
        )

        @JvmStatic
        public val toInt: MethodHandle = MethodHandles.lookup().findGetter(
            JSCFunctionEnum::class.java,
            "value",
            Int::class.java
        )

        @JvmStatic
        public fun fromInt(`value`: Int): JSCFunctionEnum = when (value) {
            CFUNCgeneric.value -> CFUNCgeneric
            CFUNCgenericmagic.value -> CFUNCgenericmagic
            CFUNCconstructor.value -> CFUNCconstructor
            CFUNCconstructormagic.value -> CFUNCconstructormagic
            CFUNCconstructororfunc.value -> CFUNCconstructororfunc
            CFUNCconstructororfuncmagic.value -> CFUNCconstructororfuncmagic
            CFUNCff.value -> CFUNCff
            CFUNCfff.value -> CFUNCfff
            CFUNCgetter.value -> CFUNCgetter
            CFUNCsetter.value -> CFUNCsetter
            CFUNCgettermagic.value -> CFUNCgettermagic
            CFUNCsettermagic.value -> CFUNCsettermagic
            CFUNCiteratornext.value -> CFUNCiteratornext
            else -> error("enum not found")
        }
    }
}
