// this file is auto generated by endoqa kotlin ffi, modify it with caution
package lib.quickjs

import java.lang.foreign.*
import java.lang.invoke.VarHandle

@JvmInline
public value class JSPropertyDescriptor(
    public val `$mem`: MemorySegment,
) {
    public var flags: Int
        get() = flagsHandle.get(this.`$mem`, 0L) as Int
        set(`value`) {
            flagsHandle.set(this.`$mem`, 0L, value)
        }

    public var `value`: JSValue
        get() = (valueHandle.get(this.`$mem`, 0L) as Long).toULong()
        set(`value`) {
            valueHandle.set(this.`$mem`, 0L, value.toLong())
        }

    public var getter: JSValue
        get() = (getterHandle.get(this.`$mem`, 0L) as Long).toULong()
        set(`value`) {
            getterHandle.set(this.`$mem`, 0L, value.toLong())
        }

    public var setter: JSValue
        get() = (setterHandle.get(this.`$mem`, 0L) as Long).toULong()
        set(`value`) {
            setterHandle.set(this.`$mem`, 0L, value.toLong())
        }

    public constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(layout)
    })

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            ValueLayout.JAVA_INT.withName("flags"),
            MemoryLayout.paddingLayout(4),
            ValueLayout.JAVA_LONG.withName("value"),
            ValueLayout.JAVA_LONG.withName("getter"),
            ValueLayout.JAVA_LONG.withName("setter"),
        ).withName("JSPropertyDescriptor")

        @JvmField
        public val flagsHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("flags"))

        @JvmField
        public val valueHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("value"))

        @JvmField
        public val getterHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("getter"))

        @JvmField
        public val setterHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("setter"))

        @JvmStatic
        public fun allocate(alloc: SegmentAllocator): JSPropertyDescriptor =
            JSPropertyDescriptor(alloc.allocate(layout))
    }
}
